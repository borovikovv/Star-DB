{"version":3,"sources":["components/error-message/Death-Star-icon.png","components/header/header.js","components/item-details/item-details.js","components/swapi-service-context/swapi-service-context.js","components/hoc-helpers/with-swapi-service.js","components/sw-components/starships-details.js","components/sw-components/person-details.js","components/item-list/item-list.js","components/spinner/spinner.js","components/hoc-helpers/withData.js","components/sw-components/items-list.js","components/row/row.js","components/pages/people-page.js","components/sw-components/planets-details.js","components/pages/planet-page.js","components/pages/starship-page.js","components/error-message/error-mesage.js","service/service.js","components/random-planets/random-planets.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","react_router_dom","to","Record","_ref","item","field","label","ItemDetails","state","image","this","updateItem","prevProps","props","itemId","_this2","_this$props","getData","getImageUrl","then","setState","_this$state","name","src","alt","React","Children","map","children","child","cloneElement","Component","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","Wrapped","mapMethodsToProps","swapiService","serviceToProps","Object","assign","item_details_ItemDetails","item_details_Record","getStarship","getStarshipsImage","getPerson","getPersonImage","ItemList","data","onItemSelected","renderLabel","items","id","key","onClick","Spinner","withData","View","_Component","_temp","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","inherits","createClass","value","components_spinner_spinner","withChildFunction","Wrapper","fn","renderName","PersonList","getAllPeople","PlanetsList","getAllPlanets","StarshipsList","getAllStarships","Row","left","right","withRouter","history","match","params","row","push","person_details","getPlanet","getPlanetsImage","PlanetPage","selectedPlanet","planets_details","ErrorMessage","icon","SwapiService","_apiBase","_imageBase","getResourses","_callee","url","res","regenerator_default","wrap","_context","prev","next","fetch","sent","ok","Error","status","json","abrupt","stop","_callee2","_context2","results","_transformPerson","_callee3","person","_context3","_callee4","_context4","_transformPlanet","_callee5","planet","_context5","_callee6","_context6","_transformStarship","_callee7","starship","_context7","_ref8","_ref9","_ref10","_extractId","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","crew","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color","RandomPlanets","loading","error","onLoadedPlanet","err","onError","updatePlanet","Math","floor","random","catch","interval","setInterval","clearInterval","hasData","errorNotice","error_mesage","content","random_planets_PlanetView","spinner","PlanetView","Fragment","App","header_header","random_planets_RandomPlanets","react_router","path","render","exact","component","PeoplePage","StarshipPage","starships_details","ReactDOM","app_App","document","getElementById"],"mappings":"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","file":"static/js/main.4cf99fc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Death-Star-icon.e76c8d59.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nconst Header = () => {\n    return(\n        <div className=\"d-flex\">\n            <h2>\n                <Link className=\"header\" to=\"/\">StarDB</Link>\n            </h2>\n            <ul className=\"links d-flex\">\n                <li>\n                    <Link to=\"/people/\">people</Link>\n                </li>\n                <li>\n                    <Link to=\"/planets/\">planets</Link>\n                </li>\n                <li>\n                    <Link to=\"/starships/\">starships</Link>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './item-details.css';\n\nconst Record = ({item, field, label}) => {\n    return (\n        <li className=\"list-group-item\">\n            <span className=\"term\">{label}</span>\n            <span>{ item[field] }</span>\n        </li>\n    )\n} \nexport { Record };\n\nexport default class ItemDetails extends Component {\n\n\n    state = {\n        item: null,\n        image: null\n    }\n\n    componentDidMount() {\n        this.updateItem();\n    }\n\n    componentDidUpdate(prevProps) {\n        if( this.props.itemId !== prevProps.itemId ) {\n            this.updateItem();\n        }\n    }\n\n    updateItem() {\n        const { itemId, getData, getImageUrl } = this.props;\n\n        if(!itemId) {\n            return;\n        }\n            getData(itemId)\n            .then((item) => {\n                this.setState({\n                    item,\n                    image: getImageUrl(item) })\n            });\n    }\n    \n    render() {\n\n        const { item, image } = this.state;\n\n        if(!item ) {\n            return <span> Select a person from a list</span>\n        }\n        const { name } = item;\n\n        return(\n            <div className=\"item-details card\">\n                <img className=\"item-image\"\n                    src={image}\n                    alt=\"image\"/>\n                <div className=\"card-body\">\n                    <h4>{name}</h4>\n                    <ul className=\"list-group list-group-flush\">\n                        {\n                            React.Children.map(this.props.children, (child) =>  {\n                                return React.cloneElement(child, {item});\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nconst {\n    Provider: SwapiServiceProvider,\n    Consumer: SwapiServiceConsumer\n} = React.createContext();\n\nexport {\n    SwapiServiceProvider,\n    SwapiServiceConsumer\n};","import React from 'react';\nimport { SwapiServiceConsumer } from './../swapi-service-context/swapi-service-context';\n\nconst withSwapiService = (Wrapped, mapMethodsToProps) => {\n\n    return(props) => {\n        return ( \n            <SwapiServiceConsumer>\n                {\n                    (swapiService) => {\n                        const serviceToProps = mapMethodsToProps(swapiService);\n                        return (\n                            <Wrapped {...props} { ...serviceToProps } />\n                        )\n                    }\n                }\n            </SwapiServiceConsumer>\n        )\n    }\n}\nexport { withSwapiService };","import React from 'react';\nimport ItemDetails, { Record } from '../item-details/item-details';\nimport { withSwapiService } from './../hoc-helpers/with-swapi-service';\n\nconst StarshipDetails = (props) => {\n    return(\n        <ItemDetails {...props} >\n            <Record label={'Model'}  field={'model'} />\n            <Record label={'Length'}  field={'length'} />\n            <Record label={'cost'}  field={'costInCredits'} />\n        </ItemDetails>\n    )\n}\n\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getStarship,\n        getImageUrl: swapiService.getStarshipsImage\n    }\n}\n\nexport default withSwapiService(StarshipDetails, mapMethodsToProps);","import React from 'react';\nimport ItemDetails, { Record } from '../item-details/item-details';\nimport { withSwapiService } from './../hoc-helpers/with-swapi-service';\n\nconst PersonDetails  = (props) => {\n    return(\n        <ItemDetails className=\"person-details\" {...props }>\n            <Record label={'Gender'}  field={'gender'} />\n            <Record label={'BirthYear'}  field={'birthYear'} />\n        </ItemDetails>\n    )\n}\n\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getPerson,\n        getImageUrl: swapiService.getPersonImage\n    }\n}\n\nexport default withSwapiService(PersonDetails, mapMethodsToProps);\n","import React from 'react';\nimport './item-list.css';\n\nconst ItemList = (props) => {\n\n    const { data, onItemSelected, children:renderLabel } = props;\n\n        const items =  data.map((item) => {\n            const {id} = item;\n            const label = renderLabel(item);\n\n            return (\n                <li className=\"list-group-item\"\n                    key={id}\n                    onClick={() => onItemSelected(id) }>\n                    { label }\n                </li>\n            )\n        });\n\n        return(\n            <ul className=\"item-list list-group\">\n                { items }\n            </ul>\n        )\n}\n\nexport default ItemList;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return(\n    <div className=\"lds-css\">\n      <div className=\"lds-double-ring\">\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n    )\n}\n\nexport default Spinner;","import React, { Component } from 'react';\nimport Spinner from './../spinner/spinner';\n\nconst withData = (View) => {\n    return class extends Component {\n\n        state = {\n            data: null\n        }\n    \n        componentDidMount() {\n\n            this.props.getData()\n            .then((data) => {\n                this.setState({\n                    data\n                });\n            });\n        }\n\n        render() {\n\n            const { data } = this.state;\n\n            if(!data) {\n                return <Spinner />\n            }\n            return <View { ...this.props} data={ data }/>;\n        }\n    };\n};\n\nexport  { withData };","import React from 'react';\nimport ItemList from './../item-list/item-list';\nimport { withData } from './../hoc-helpers/withData';\nimport { withSwapiService } from './../hoc-helpers/with-swapi-service';\n\n\nconst withChildFunction = (Wrapper, fn) => {\n    return (props) => {\n        return (\n            <Wrapper {...props}>\n                { fn }\n            </Wrapper>\n        )\n    }\n}\nconst renderName = ({name}) => <span>{name}</span>;\n\nconst mapMethodsPersonToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllPeople\n    }\n}\n\nconst mapMethodsPlanetsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllPlanets\n    }\n}\n\nconst mapMethodsStarshipsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllStarships\n    }\n}\n\n\nconst PersonList = withSwapiService(withData(withChildFunction(ItemList, renderName)), mapMethodsPersonToProps);\nconst PlanetsList = withSwapiService(withData(withChildFunction(ItemList, renderName)), mapMethodsPlanetsToProps);\nconst StarshipsList = withSwapiService(withData(withChildFunction(ItemList, renderName)), mapMethodsStarshipsToProps);\n\nexport {\n    PersonList,\n    PlanetsList,\n    StarshipsList\n};","import React from 'react';\n\n\nconst Row = ({left, right}) => {\n    return (\n        <div className=\"row mb2\">\n            <div className=\"col-md-6\">\n                { left}\n            </div>\n            <div className=\"col-md-6\">\n                { right }\n            </div>\n        </div>\n    )\n};\n\nexport default Row;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PersonDetails from './../sw-components/person-details';\nimport { PersonList } from './../sw-components/items-list';\nimport Row from './../row/row';\n\nconst PeoplePage = ({ history, match}) => {\n\n    const { id } = match.params;\n\n    return (\n        <Row \n            left={ <PersonList onItemSelected={ (id) => history.push(id) } /> } \n            right={ <PersonDetails itemId={id}/> } />\n    )\n        \n}\n\nexport default withRouter(PeoplePage);","import React from 'react';\nimport ItemDetails, { Record } from '../item-details/item-details';\nimport { withSwapiService } from './../hoc-helpers/with-swapi-service';\n\nconst PlanetDetails = (props) => {\n    return(\n        <ItemDetails { ...props}>\n            <Record label={'Population'}  field={'population'} />\n            <Record label={'Diameter'}  field={'diameter'} />\n        </ItemDetails>\n    )\n\n}\n\nconst mapMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getPlanet,\n        getImageUrl: swapiService.getPlanetsImage\n    }\n}\n\nexport default withSwapiService(PlanetDetails, mapMethodsToProps);","import React, { Component } from 'react';\nimport Row from './../row/row';\nimport PlanetDetails from './../sw-components/planets-details';\nimport { PlanetsList } from './../sw-components/items-list';\n\nexport default class PlanetPage extends Component {\n\n    state = {\n        selectedPlanet: null\n    }\n\n    onItemSelected = (itemId) => {\n        this.setState({selectedPlanet: itemId});\n    }\n\n    render() {\n        return (\n            <Row \n                left={ <PlanetsList onItemSelected={ this.onItemSelected } /> } \n                right={ <PlanetDetails itemId={ this.state.selectedPlanet}/> } />\n        )\n    }\n}","import React from 'react';\nimport { StarshipsList } from './../sw-components/items-list';\nimport { withRouter } from 'react-router-dom';\n\nconst StarshipPage = ({history}) => {\n\n    return (\n        <StarshipsList onItemSelected={ (itemId) => history.push(itemId) } />\n    )\n\n}\n\nexport default withRouter(StarshipPage);","import React from 'react';\nimport icon from './Death-Star-icon.png';\nimport './error-message.css';\n\nconst ErrorMessage = () => {\n    return(\n        <div className=\"error-message\">\n            <img className=\"error-img\" \n            src={icon}\n            alt=\"error\"/>\n            <h1> BOOM </h1>\n            <span className=\"d-flex\">\n                Что-то пошло не так!\n            </span>\n            <span className=\"span2\">\n                Мы отправили дронов, чтоб подчинить поломку...\n            </span>\n        </div>\n    )\n}\n\nexport default ErrorMessage;","export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n    _imageBase = 'https://starwars-visualguide.com/assets/img';\n\n    getResourses = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n    \n        if(!res.ok){\n            throw new Error(`Could not fetch ${url}` +\n            `available ${res.status}`);\n        }\n    \n        return await res.json();\n    }\n\n    getAllPeople = async () => {\n        const res = await this.getResourses(`/people/`);\n        return res.results.map(this._transformPerson);\n    }\n    \n    getPerson = async (id) => {\n        const person = await this.getResourses(`/people/${id}/`);\n        return this._transformPerson(person);\n    }\n\n    getAllPlanets = async () => {\n        const res = await this.getResourses(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n    \n    getPlanet = async (id) => {\n        const planet = await this.getResourses(`/planets/${id}/`);\n        return this._transformPlanet(planet);\n    }\n\n    getAllStarships = async () => {\n        const res = await this.getResourses(`/starships/`);\n        return res.results.map(this._transformStarship);\n    }\n    \n    getStarship = async (id) => {\n        const starship = await this.getResourses(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    }\n\n    getPersonImage = ({id}) => {\n        return `${this._imageBase}/characters/${id}.jpg`\n    }\n\n    getPlanetsImage = ({id}) => {\n        return `${this._imageBase}/planets/${id}.jpg`\n    }\n\n    getStarshipsImage = ({id}) => {\n        return `${this._imageBase}/starships/${id}.jpg`\n    }\n\n    _extractId = (item) => {\n        const idRegEx = /\\/([0-9]*)\\/$/;\n        return  item.url.match(idRegEx)[1];\n    }\n\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        }\n    }\n\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.cost_in_credits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargo_capacity\n        }\n    }\n\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birth_year,\n            eyeColor: person.eye_color\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport './random-planets.css';\nimport Spinner from './../spinner/spinner';\nimport ErrorMessage from './../error-message/error-mesage';\nimport SwapiService from './../../service/service';\n\nexport default class RandomPlanets extends Component {\n\n    swapiService = new SwapiService();\n\n    state = {\n        planet: {},\n        loading: true,\n        error: false\n    }\n\n    onLoadedPlanet = (planet) => {\n        this.setState({\n            planet,\n            loading: false,\n            err: false\n        });\n    }\n\n    onError = (err) => {\n        this.setState({\n            err: true,\n            loading: false\n        });\n    }\n\n    componentDidMount() {\n        this.updatePlanet();\n        this.interval = setInterval(this.updatePlanet, 10000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    updatePlanet = () => {\n        const id = Math.floor(Math.random() * 9) + 2;\n        this.swapiService\n            .getPlanet(id)\n            .then(this.onLoadedPlanet)\n            .catch(this.onError);\n    }\n\n    render() {\n\n        const { planet,\n        loading, err } = this.state;\n\n        const hasData = !(err || loading);\n        const errorNotice = err ? <ErrorMessage /> : null;\n        const content = hasData ? <PlanetView planet={planet} /> : null;\n        const spinner = loading ? <Spinner /> : null;\n\n\n        return(\n            <div className=\"random-planet card\">\n                { errorNotice }\n                {   content }\n                {   spinner }\n            </div>\n        )\n    }\n}\n\nconst PlanetView = ({planet}) => {\n\n    const { id, name, population, rotationPeriod, diameter} = planet;\n\n    return(\n        <React.Fragment>\n            <img className=\"random-planet-image\"\n            src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n            alt=\"image planet\"/>\n    \n            <div className=\"card-body\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item\">\n                        <span className=\"term\">Population</span>\n                        <span>{population}</span>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <span className=\"term\">Rotation Period</span>\n                        <span>{rotationPeriod}</span>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <span className=\"term\">Diameter</span>\n                        <span>{diameter}</span>\n                    </li>\n                </ul>\n            </div>\n        </React.Fragment>\n    )\n\n}\n","import React, { Component } from 'react';\nimport './app.css';\nimport Header from './../header/header';\nimport StarshipDetails from './../sw-components/starships-details';\nimport PeoplePage from './../pages/people-page';\nimport PlanetPage from './../pages/planet-page';\nimport StarshipPage from './../pages/starship-page';\nimport RandomPlanets from './../random-planets/random-planets';\nimport SwapiService from './../../service/service';\nimport { SwapiServiceProvider } from './../swapi-service-context/swapi-service-context';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n\nexport default class App extends Component {\n\n    swapiService = new SwapiService();\n\n    render() {\n\n        return(\n            <div>\n                <SwapiServiceProvider value={this.swapiService}>\n                    <Router>\n                        <Header />\n                        <RandomPlanets />\n                        <Switch>\n                            <Route path='/' render={ () => <h2 className=\"welcome\">Welcome to StarDB </h2>}\n                                    exact />\n                            <Route path='/people/:id?' component={PeoplePage} />\n                            <Route path='/planets' component={PlanetPage} />\n                            <Route path='/starships' exact component={StarshipPage} />\n                            <Route path='/starships/:id' render={ ({match}) => { \n                                const { id } = match.params;\n                            return <StarshipDetails itemId={id} />\n                            }} />\n                            <Route render={()=> <h2> Page not found </h2> } />\n                        </Switch>\n                    </Router>\n                </SwapiServiceProvider>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}